/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MigrationsInterface extends ethers.utils.Interface {
  functions: {
    "lastCompletedMigration()": FunctionFragment;
    "owner()": FunctionFragment;
    "setCompleted(uint256)": FunctionFragment;
    "upgrade(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "lastCompletedMigration",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setCompleted",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "upgrade", values: [string]): string;

  decodeFunctionResult(
    functionFragment: "lastCompletedMigration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setCompleted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "upgrade", data: BytesLike): Result;

  events: {};
}

export class Migrations extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MigrationsInterface;

  functions: {
    lastCompletedMigration(overrides?: CallOverrides): Promise<[BigNumber]>;

    "lastCompletedMigration()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    setCompleted(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setCompleted(uint256)"(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    upgrade(
      newAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "upgrade(address)"(
      newAddress: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  lastCompletedMigration(overrides?: CallOverrides): Promise<BigNumber>;

  "lastCompletedMigration()"(overrides?: CallOverrides): Promise<BigNumber>;

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  setCompleted(
    completed: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setCompleted(uint256)"(
    completed: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  upgrade(
    newAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "upgrade(address)"(
    newAddress: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    lastCompletedMigration(overrides?: CallOverrides): Promise<BigNumber>;

    "lastCompletedMigration()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    setCompleted(
      completed: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setCompleted(uint256)"(
      completed: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    upgrade(newAddress: string, overrides?: CallOverrides): Promise<void>;

    "upgrade(address)"(
      newAddress: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    lastCompletedMigration(overrides?: CallOverrides): Promise<BigNumber>;

    "lastCompletedMigration()"(overrides?: CallOverrides): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    setCompleted(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setCompleted(uint256)"(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    upgrade(newAddress: string, overrides?: Overrides): Promise<BigNumber>;

    "upgrade(address)"(
      newAddress: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    lastCompletedMigration(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lastCompletedMigration()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setCompleted(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setCompleted(uint256)"(
      completed: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    upgrade(
      newAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "upgrade(address)"(
      newAddress: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
